{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","site/user/containers/ehealth/EhealthScreen.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","d","__webpack_exports__","EhealthScreen","props","_useState","useState","_useState2","Object","slicedToArray","code","setCode","_useState3","_useState4","namSinh","setNamSinh","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","data","id","img","images","ehealth","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","onConfirm","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","toast","abrupt","userProvider","getEhealth","sent","playSound","history","push","item","t0","stop","react_default","a","createElement","Container","title","className","autoComplete","onKeyDown","event","preventDefault","document","activeElement","blur","style","display","width","fontWeight","marginTop","fontSize","color","marginLeft","padding","borderRadius","border","maxLength","pattern","inputMode","type","placeholder","onChange","e","target","marginRight","onClick","length","map","index","src"],"mappings":"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","file":"static/js/11.62a34fdf.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport images from \"@src/resources/images\";\nimport Container from \"@src/components/Container\";\nimport userProvider from \"@src/data-access/user-provider\";\nimport { toast } from \"react-toastify\";\nimport { data } from \"./data\";\nimport { playSound } from \"@utils/sound-utils\";\nconst EhealthScreen = (props) => {\n  const [code, setCode] = useState(\"\");\n  const [namSinh, setNamSinh] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPhone, setShowPhone] = useState(false);\n  const data = [\n    {\n      id: 1,\n      img: images.ehealth.img1,\n    },\n    {\n      id: 2,\n      img: images.ehealth.img2,\n    },\n    {\n      id: 3,\n      img: images.ehealth.img3,\n    },\n    {\n      id: 4,\n      img: images.ehealth.img4,\n    },\n    {\n      id: 5,\n      img: images.ehealth.img5,\n    },\n    {\n      id: 6,\n      img: images.ehealth.img6,\n    },\n    {\n      id: 7,\n      img: images.ehealth.img7,\n    },\n    {\n      id: 8,\n      img: images.ehealth.img8,\n    },\n    {\n      id: 9,\n      img: images.ehealth.img9,\n    },\n    {\n      id: 10,\n      img: images.ehealth.img10,\n    },\n    {\n      id: 11,\n      img: images.ehealth.img11,\n    },\n    {\n      id: 12,\n      img: images.ehealth.img12,\n    },\n  ];\n  const onConfirm = async () => {\n    try {\n      if (!code) {\n        toast.error('Bạn chưa nhập mã người bệnh!')\n        return\n      }\n      if (!namSinh) {\n          toast.error('Bạn chưa nhập năm sinh!')\n          return\n      }\n\n      setIsLoading(true);\n      let res = await userProvider.getEhealth(code, namSinh);\n        if (res && res.code == 0) {\n          setIsLoading(false)\n          playSound()\n          props.history.push('/y-ba-dien-tu', {\n              item: res.data\n          })\n        } else if (res && res.code === 1302) {\n          setIsLoading(false);\n          toast.error(\"Mã bệnh nhân không đúng vui lòng nhập lại\", {});\n        }\n        else {\n          setIsLoading(false);\n          toast.error(\"Mã bệnh nhân không đúng vui lòng nhập lại\", {});\n        }\n    } catch (error) {\n      setIsLoading(false);\n      toast.error(\"Mã bệnh nhân không đúng vui lòng nhập lại\", {});\n    }\n  };\n  const onChangeCode = (e) => {\n    setCode(e.target.value);\n    // if (e.target.value.length >= 10) {\n    //   onConfirm(e.target.value);\n    // }\n  };\n  const onChangeNamSinh = (e) => {\n    let value = e.target.value;\n    setNamSinh(value);\n  };\n  const toggleHidePhone = () => {\n    let phone = document.getElementById(\"input-phone\");\n    if (!showPhone) {\n      phone.style[\"-webkit-text-security\"] = \"none\";\n      phone.style[\"-moz-webkit-text-security\"] = \"none\";\n      phone.style[\"-webkit-text-security\"] = \"none\";\n      setShowPhone(true);\n    } else {\n      phone.style[\"-webkit-text-security\"] = \"disc\";\n      phone.style[\"-moz-webkit-text-security\"] = \"disc\";\n      phone.style[\"-webkit-text-security\"] = \"disc\";\n      setShowPhone(false);\n    }\n  };\n  const onKeyDown = (event) => {\n    if (event.key == \"Enter\") {\n      event.preventDefault();\n      onConfirm();\n      document.activeElement.blur();\n    }\n  };\n  return (\n    <Container isLoading={isLoading} title=\"Tìm kiếm y bạ điện tử\">\n      <div className=\"container-ehealth\">\n        <div className=\"container-ehealth-input\">\n          <form autoComplete=\"off\" onKeyDown={onKeyDown} className=\"form\">\n            <div style={{ display: \"flex\", width: \"23%\" }}>\n              <h4 \n                style={{ \n                  fontWeight: \"bold\", \n                  marginTop: \"16px\", \n                  fontSize: \"21px\" \n                }}>Năm sinh <strong style={{ color: \"red\" }}>*</strong></h4>\n              <input\n                  style={{ \n                    fontWeight: \"bold\", \n                    fontSize: \"1.55vw\", \n                    marginLeft: \"10px\", \n                    width: \"54%\", \n                    padding: \"7px\", \n                    borderRadius: \"15px\", \n                    border: \"1px solid\"\n                  }}\n                  autoComplete=\"off\"\n                  maxLength={4}\n                  pattern=\"[0-9]*\"\n                  inputMode=\"numeric\"\n                  className=\"input input-hide-phone\"\n                  type=\"number\"\n                  id=\"input-phone\"\n                  placeholder=\"Nhập năm sinh\"\n                  onChange={onChangeNamSinh}\n                  value={namSinh} />\n            </div>\n            <span className=\"txt-label\" style={{ fontSize: \"21px\" }}>Mã người bệnh (Mã NB) <strong style={{ color: \"red\" }}>*</strong></span>\n            <div className=\"group-input-phone\" style={{ marginRight: \"14px\" }}>\n              <input\n                autoComplete=\"off\"\n                id=\"input-code\"\n                className=\"input\"\n                placeholder=\"Nhập mã người bệnh\"\n                onChange={onChangeCode}\n                value={code}\n                type=\"number\"\n              />\n            </div>\n            <input\n              className=\"submit\"\n              onClick={() => onConfirm()}\n              type=\"button\"\n              value=\"Tìm kiếm\"\n            />\n          </form>\n        </div>\n        <div className=\"container-ehealth-content\">\n          <div className=\"row-ehealth\">\n            {data &&\n              data.length &&\n              data.map((item, index) => {\n                return (\n                  <div className=\"col-img-guide\" key={index}>\n                    <img src={item.img} className=\"img-guide-ehealth\" />\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default EhealthScreen;\n"],"sourceRoot":""}