{"version":3,"sources":["components/ehealth/ListService.js","components/ehealth/AnatomicalResult.js","components/ehealth/ehealthUtils.js","components/ehealth/Drug.js","components/ehealth/ImageResult.js","components/ehealth/TestResult.js","components/ehealth/Result.js","site/user/containers/ehealth/DetailEhealth.js"],"names":["ListService","props","_useState","useState","item","_useState2","Object","slicedToArray","data","checkUps","length","react_default","a","createElement","id","className","map","e","i","key","serviceName","Date","createdAt","format","roomName","doctorFullName","style","color","sequenceNo","AnatomicalResult","console","log","pathologies","biopsyLocation","src","images","ehealth","ic_dot","microsome","macrosome","result","discussion","uncheck","details","verified","check","result2","conclusion","ehealthUtils","checkHighlight","min","max","toLowerCase","parseFloat","error","showHighlight","this","getResult","lowIndicator","highIndicator","normalRange","resultState","getNote","getRangeMedicalTest","item2","range","Drug","setData","useEffect","resultCheckup","medinine","forEach","medicines","concat","ListExternalMedicine","width","measure","dosage","usage","quantity","uom","colSpan","textAlign","ImageResult","paddingBottom","SummaryResult","Discussion","summaryResult","TestResult","result1","medicalTests","group","group2Name","filter","ar","indexOf","new_list","itm","type","value","ListMedical","renderMedicalTestLine","index","isHighlight","fontWeight","unit","ServiceMedicTestLine","Result","renderItem","label","value2","firstDiagnostic","diseaseDiagnostic","otherDiseaseDiagnostic","diseaseType","doctorAdvice","note","DetailEhealth","name","icon","ic_service","ic_result","ic_image_result","ic_diagnostic","ic_anatomy","ic_drug","_useState3","location","state","_useState4","el","document","getElementById","M","Tabs","init","Birthday","birthday","Container","title","class","href","ic_user","patientName","ehealth_ListService","ehealth_Result","ehealth_TestResult","ehealth_ImageResult","diagnosticImages","ehealth_AnatomicalResult","ehealth_Drug"],"mappings":"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","file":"static/js/10.ce224994.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport images from \"@src/resources/images\";\n\n{\n  /** Danh sách dịch vụ khám */\n}\nconst ListService = (props) => {\n  const [data, setData] = useState(props.item);\n  let serviceCheckup =\n    data.checkUps && data.checkUps.length ? data.checkUps[0] : {};\n  // let serviceCheckup = (data.checkUps || []).find(item => item.ServiceType == \"CheckUp\") || {};\n\n  const getSumPrice = () => {\n    let price = ((data || {}).checkUps || []).reduce((pre, cur) => {\n      return pre + cur.amount;\n    }, 0);\n    return price.formatPrice();\n  };\n  return (\n    <div id=\"list-service\" className=\"content\">\n      <div className=\"container-hospital container-gender\">\n        <span className=\"container-gender-title\">Bệnh viện Phổi Trung Ương</span>\n        {/* <div style={{ paddingTop: 30 }}>Thời gian khám: <span className=\"bold\">{new Date(data.createdAt).format('dd/MM/yyyy')}</span> </div>\n                <div className=\"padding-top\" >Nơi khám: <span className=\"bold\">{serviceCheckup.roomName}</span> </div>\n                <div className=\"padding-top\" >Bác sĩ: <span className=\"bold\">{serviceCheckup.doctorFullName}</span> </div>\n                <div className=\"padding-top\" >Số khám: <span className=\"bold \" style={{ color: '#ED176B' }}>{serviceCheckup.sequenceNo}</span> </div> */}\n\n        <div className=\"container-services\">\n          {/* <span className=\"service\">Dịch vụ đã khám</span> */}\n          <div>\n            <ul className=\"list-services row\">\n              {data.checkUps.map((e, i) => {\n                return (\n                  <li key={i} className=\"col-lg-6\">\n                    <div className=\"container-gender-item\">\n                      <span className=\" txt-title\">{e.serviceName}</span>\n                      <div className=\"item-service-content\">\n                        <p>\n                          <span className=\"txt-lable\">Thời gian khám:</span>\n                          <span className=\"bold\">\n                            {new Date(data.createdAt).format(\"dd/MM/yyyy\")}\n                          </span>{\" \"}\n                        </p>\n                        <p className=\"padding-top\">\n                          <span className=\"txt-lable\"> Nơi khám:</span>\n                          <span className=\"bold\">{e.roomName}</span>{\" \"}\n                        </p>\n                        <p className=\"padding-top\">\n                          <span className=\"txt-lable\"> Bác sĩ:</span>\n                          <span className=\"bold\">{e.doctorFullName}</span>{\" \"}\n                        </p>\n                        <p className=\"padding-top\">\n                          <span className=\"txt-lable\"> Số khám:</span>\n                          <span className=\"bold \" style={{ color: \"#ED176B\" }}>\n                            {e.sequenceNo}\n                          </span>{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {/* <div className=\"item-service padding-top\">\n                            <span className=\"dots\" style={{ backgroundColor: '#FFF' }} />\n                            <span style={{\n                                width: '70%',\n                                color: '#000',\n                                fontWeight: '600'\n                            }}>Tổng tiền:</span>\n                            <span style={{ color: '#ED176B', fontWeight: 'bold' }}>{getSumPrice()}đ</span>\n                        </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListService;\n","import React, { useState, useEffect } from 'react'\nimport './style.scss';\nimport images from '@src/resources/images'\n\nconst AnatomicalResult = (props) => {\n    console.log('props: ', props);\n\n    const [data, setData] = useState(props.item.pathologies)\n\n    {/** kết quả giải phẫu */ }\n    return (\n        <div id=\"anatomical-result\" className=\"content\" >\n            <div className=\"container-result\">\n                <ul className=\"list-result\">\n                    {data.map((e, i) => {\n                        return (\n                            <li key={i}>\n                                <span className=\"txt-title\">{e.serviceName}</span>\n                                <div>\n                                    {e.biopsyLocation ?\n                                        <div>\n                                            <p className=\"txt-label\">Vị trí sinh thiết</p>\n                                            <div className=\"item-sick\">\n                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                <span>{e.biopsyLocation}</span>\n                                            </div></div> : null\n\n                                    }\n                                    {e.microsome ?\n                                        <div>\n                                            <p className=\"txt-label\">Vị thể</p>\n                                            <div className=\"item-sick\">\n                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                <span>{e.microsome}</span>\n                                            </div></div> : null\n\n                                    }\n                                    {e.macrosome ?\n                                        <div>\n                                            <p className=\"txt-label\">Đại thể</p>\n                                            <div className=\"item-sick\">\n                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                <span>{e.macrosome}</span>\n                                            </div></div> : null\n\n                                    }\n                                    {(e.result || e.discussion) ?\n                                        <div>\n                                            <p className=\"txt-label\">Kết quả</p>\n                                            <div className=\"item-sick\">\n                                                <img src={images.ehealth.uncheck} className=\"img-verified\" />\n                                                <span>{e.result + (e.discussion ? e.discussion : '')}</span>\n                                            </div></div> : null\n\n                                    }\n                                    {\n                                        // e.ReportTemplate == \"Tebaoamdao\" || e.ReportTemplate == \"Thinprep\" && \n                                        (e.details && e.details.length > 0) ?\n                                            e.details.map((item, i) => {\n                                                return (\n                                                    <div key={i}>\n                                                        <div className=\"item-sick img-style-verified2\">\n                                                            {item.verified ?\n                                                                <img src={images.ehealth.check} className=\"img-verified\" />\n                                                                :\n                                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                            }\n                                                            {item.verified ?\n                                                                <span>{item.result2}</span> : <span>{item.serviceName}</span>\n                                                            }\n                                                            <span className=\"style-item-result\">{item.result}</span>\n                                                            \n                                                        </div>\n                                                        {/* <span>{item.result}</span> */}\n                                                        {/* {item.result2 ?\n                                                            <div className=\"item-sick item-child\">\n                                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                                <span>{item.result2}</span>\n                                                            </div>\n                                                            : null\n                                                        } */}\n                                                        {/* {item.result ?\n                                                            <div className=\"item-sick item-child\">\n                                                                <img src={images.ehealth.ic_dot} className=\"img-verified\" />\n                                                                <span>{item.result}</span>\n                                                                \n                                                            </div>\n                                                            : null\n                                                        } */}\n                                                    </div>\n                                                )\n                                            }) : null\n\n                                    }\n\n                                </div>\n                                {\n                                    (e.conclusion) ?\n                                        <div>\n                                            <p className=\"txt-label\">Kết luận</p>\n                                            <div className=\"item-sick\">\n                                                <img src={images.ehealth.uncheck} className=\"img-verified\" />\n                                                <span>{e.conclusion}</span>\n                                            </div>\n                                        </div>\n                                        : null\n                                }\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default AnatomicalResult","export default {\n  checkHighlight(result, min, max) {\n    try {\n      if (result && result.toLowerCase() == \"dương tính\") return true;\n      result = parseFloat(result);\n      min = parseFloat(min);\n      max = parseFloat(max);\n      if (result < min || result > max) return true;\n      return false;\n    } catch (error) {\n      return false;\n    }\n  },\n  showHighlight(item) {\n    if (\n      this.checkHighlight(\n        this.getResult(item),\n        item.lowIndicator,\n        item.highIndicator\n      )\n    ) {\n      return this.checkHighlight(\n        this.getResult(item),\n        item.lowIndicator,\n        item.highIndicator\n      );\n    }\n    if (item.normalRange) {\n      if (!item.resultState) return false;\n      else {\n        if (item.resultState != \"N\") return true;\n      }\n      return false;\n    }\n  },\n  getResult(item) {\n    return item.result ? item.result : item.conclusion;\n  },\n  getNote(item) {\n    let result = this.getResult(item);\n    let min = item.lowIndicator;\n    let max = item.highIndicator;\n    try {\n      //   if (result && result.toLowerCase() == \"dương tính\") return true;\n      result = parseFloat(result);\n      min = parseFloat(min);\n      max = parseFloat(max);\n      if (result < min) return \"Thấp\";\n      else if (result > max) return \"Cao\";\n      else if (min <= result && result <= max) {\n        return \"Bình thường\";\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  },\n  getRangeMedicalTest(item2) {\n    if (item2.normalRange) return item2.normalRange;\n    var range = \"\";\n    if (item2.lowIndicator && item2.highIndicator)\n      range = item2.lowIndicator + \" - \" + item2.highIndicator;\n    else {\n      range = item2.lowIndicator;\n      if (item2.highIndicator) range = item2.highIndicator;\n    }\n    return range;\n  },\n};\n","import React, { useState, useEffect } from 'react'\nimport ehealthUtils from './ehealthUtils'\n\n{/**thuốc */ }\nconst Drug = (props) => {\n\n    const [data, setData] = useState([])\n    useEffect(() => {\n        let result = props.item\n        if (!result || !result.checkUps || !result.checkUps.length)\n            return;\n        let resultCheckup = result.checkUps || [];\n        let medinine = [];\n        resultCheckup.forEach(item => {\n            if (item.medicines && item.medicines.length)\n                medinine = medinine.concat(item.medicines);\n            if (item.ListExternalMedicine && item.ListExternalMedicine.length)\n                medinine = medinine.concat(item.ListExternalMedicine);\n        })\n        if (result.medicines && result.medicines.length) {\n            medinine = medinine.concat(result.medicines);\n        }\n        setData(medinine)\n    }, [props.item])\n    return (\n        <div id=\"drug\" className=\"content \" >\n            <table className=\"table-root\">\n                <thead>\n                    <tr className=\"table-header\">\n                        <th style={{ width: '70%' }}>Tên thuốc</th>\n                        <th>Số lượng</th>\n                        <th>Đơn vị</th>\n                    </tr>\n                </thead>\n                {\n                    data && data.length ?\n                        data.map((e, i) => {\n                            let serviceName = \"\";\n                            // if (e.serviceName)\n                            //     serviceName += e.serviceName + \"\\n\";\n                            if (e.measure)\n                                serviceName += e.measure + \"\\n\";\n                            if (e.dosage)\n                                serviceName += e.dosage + \"\\n\";\n                            if (e.usage)\n                                serviceName += e.usage\n                            return (\n                                <tbody className=\"table-content\" key={i}>\n                                    <tr >\n                                        <td className=\"content-name\">\n                                            <p><b>{e.serviceName}</b></p>\n                                            <p>{serviceName}</p>\n                                        </td>\n                                        <td>{e.quantity}</td>\n                                        <td>{e.uom}</td>\n                                    </tr>\n                                </tbody>\n                            )\n                        })\n                        :\n\n                        <tbody>\n                            <tr>\n                                <td colSpan=\"3\" style={{ textAlign: 'center', width: '100%' }} >Không có dữ liệu</td>\n                            </tr>\n                        </tbody>\n                }\n\n\n            </table>\n        </div>\n    )\n}\n\nexport default Drug","import React, { useState } from \"react\";\nimport images from \"@src/resources/images\";\n\n{\n  /** kết quả chẩn đoán hình ảnh */\n}\nconst ImageResult = (props) => {\n  const [data, setData] = useState(props.item);\n\n  return (\n    <div id=\"image-result\" className=\"content\">\n      <div className=\"container-result\">\n        <ul className=\"list-result\">\n          {data.map((e, i) => {\n            return (\n              <li style={{ paddingBottom: 30 }} key={i}>\n                <span className=\"txt-title\">{e.serviceName}</span>\n                {e.result || e.SummaryResult || e.Discussion ? (\n                  <div>\n                    <p className=\"txt-label\">Mô tả</p>\n                    {e.result ? (\n                      <div className=\"item-sick\">\n                        <img\n                          src={images.ehealth.ic_dot}\n                          className=\"img-verified\"\n                        />\n                        <span className=\"txt-result-sick\">{e.result}</span>\n                      </div>\n                    ) : null}\n                    {e.summaryResult ? (\n                      <div className=\"item-sick\">\n                        <img\n                          src={images.ehealth.ic_dot}\n                          className=\"img-verified\"\n                        />\n                        <span className=\"txt-result-sick\">\n                          {e.summaryResult}\n                        </span>\n                      </div>\n                    ) : null}\n                    {e.discussion ? (\n                      <div className=\"item-sick\">\n                        <img\n                          src={images.ehealth.ic_dot}\n                          className=\"img-verified\"\n                        />\n                        <span className=\"txt-result-sick\">{e.discussion}</span>\n                      </div>\n                    ) : null}\n                  </div>\n                ) : null}\n                {e.conclusion ? (\n                  <div>\n                    <p className=\"txt-label\">Kết luận</p>\n                    <div className=\"item-sick\">\n                      <img\n                        src={images.ehealth.ic_dot}\n                        className=\"img-verified\"\n                      />\n                      <span className=\"txt-result-sick\">{e.conclusion}</span>\n                    </div>\n                  </div>\n                ) : null}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageResult;\n","import React, { useState, useEffect } from \"react\";\nimport ehealthUtils from \"./ehealthUtils\";\n\n{\n  /** kết quả xét nghiệm */\n}\nconst TestResult = (props) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    let result1 = props.item.medicalTests;\n    let group = result1\n      .map((item) => item.group2Name)\n      .filter((item, i, ar) => ar.indexOf(item) === i)\n      .map((item) => {\n        let new_list = result1.filter((itm) => itm.group2Name == item);\n        return { type: item, value: { ListMedical: new_list } };\n      });\n    setData(group);\n  }, []);\n\n  const renderMedicalTestLine = (item, index, type) => {\n    return (\n      <tbody key={index}>\n        <tr className=\"table-content\">\n          <th colSpan=\"5\" className=\"service-content title-content\">\n            {item.serviceName}\n          </th>\n        </tr>\n\n        {item.details.map((e, i) => {\n          let range = ehealthUtils.getRangeMedicalTest(e);\n          let isHighlight = ehealthUtils.showHighlight(e);\n          if (type.toLowerCase() == \"vi sinh\") {\n            return (\n              <tr key={i} className=\"table-content\">\n                <td>{e.serviceName}</td>\n                <td\n                  className=\"content-center\"\n                  style={\n                    isHighlight ? { color: \"red\", fontWeight: \"bold\" } : {}\n                  }\n                >\n                  {ehealthUtils.getResult(e)}\n                </td>\n              </tr>\n            );\n          } else {\n            return (\n              <tr key={i} className=\"table-content \">\n                <td>{e.serviceName}</td>\n                <td\n                  className=\"content-center\"\n                  style={\n                    isHighlight ? { color: \"red\", fontWeight: \"bold\" } : {}\n                  }\n                >\n                  {ehealthUtils.getResult(e)}\n                </td>\n                <td className=\"content-center\">{range}</td>\n                <td className=\"content-center\">{e.unit}</td>\n                <td\n                  className=\"content-center\"\n                  style={\n                    isHighlight ? { color: \"red\", fontWeight: \"bold\" } : {}\n                  }\n                >\n                  {ehealthUtils.getNote(e)}\n                </td>\n              </tr>\n            );\n          }\n        })}\n      </tbody>\n    );\n  };\n  return (\n    <div id=\"test-result\" className=\"content container-table row\">\n      <div className=\"group-table\">\n        {data && data.length\n          ? data.map((item, index) => {\n              return (\n                <div key={index} className=\"table-other\">\n                  <span className=\"txt-title\">{item.type}</span>\n                  {item.type.toLowerCase() == \"vi sinh\" ? (\n                    <table className=\"table-root\">\n                      <thead>\n                        <tr className=\"table-header\">\n                          <th style={{ width: \"50%\" }}>Tên xét nghiệm</th>\n                          <th className=\"header-center\">Kết quả</th>\n                        </tr>\n                      </thead>\n                      {item.value.ListMedical.map((e, i) => {\n                        if (\n                          e.details &&\n                          e.details.length > 0 &&\n                          e.details[0].serviceName != 0\n                        ) {\n                          return renderMedicalTestLine(e, i, item.type);\n                        }\n                        if (e.details && e.details.length > 0) {\n                          return (\n                            <tbody className=\"table-content\" key={i}>\n                              <tr>\n                                <td className=\"service-content\">\n                                  {e.serviceName}\n                                </td>\n                                <td\n                                  className=\"content-center\"\n                                  style={\n                                    isHighlight\n                                      ? { color: \"red\", fontWeight: \"bold\" }\n                                      : {}\n                                  }\n                                >\n                                  {ehealthUtils.getResult(\n                                    e.ServiceMedicTestLine[0]\n                                  )}\n                                </td>\n                              </tr>\n                            </tbody>\n                          );\n                        }\n                        let range = ehealthUtils.getRangeMedicalTest(e);\n                        let isHighlight = ehealthUtils.showHighlight(e);\n                        return (\n                          <tbody className=\"table-content\" key={i}>\n                            <tr>\n                              <td className=\"service-content\">\n                                {e.serviceName}\n                              </td>\n                              <td\n                                className=\"content-center\"\n                                style={\n                                  isHighlight\n                                    ? { color: \"red\", fontWeight: \"bold\" }\n                                    : {}\n                                }\n                              >\n                                {ehealthUtils.getResult(e)}\n                              </td>\n                            </tr>\n                          </tbody>\n                        );\n                      })}\n                    </table>\n                  ) : (\n                    <table className=\"table-root\">\n                      <thead>\n                        <tr className=\"table-header\">\n                          <th style={{ width: \"50%\" }}>Tên xét nghiệm</th>\n                          <th className=\"header-center\">Kết quả</th>\n                          <th className=\"header-center\">Giá trị bình thường</th>\n                          <th className=\"header-center\">Đơn vị</th>\n                          <th className=\"header-center\">Ghi chú</th>\n                        </tr>\n                      </thead>\n                      {item.value && item.value.ListMedical\n                        ? item.value.ListMedical.map((e, i) => {\n                            let range = ehealthUtils.getRangeMedicalTest(e);\n                            let isHighlight = ehealthUtils.showHighlight(e);\n                            if (\n                              e.details &&\n                              e.details.length > 0 &&\n                              e.details[0].serviceName != 0\n                            ) {\n                              return renderMedicalTestLine(e, i, item.type);\n                            }\n                            if (e.details && e.details.length > 0) {\n                              return (\n                                <tbody className=\"table-content\" key={i}>\n                                  <tr>\n                                    <td className=\"service-content\">\n                                      {e.serviceName}\n                                    </td>\n                                    <td\n                                      className=\"content-center\"\n                                      style={\n                                        isHighlight\n                                          ? { color: \"red\", fontWeight: \"bold\" }\n                                          : {}\n                                      }\n                                    >\n                                      {ehealthUtils.getResult(e.details[0])}\n                                    </td>\n                                    <td className=\"content-center\">{range}</td>\n                                    <td className=\"content-center\">{e.unit}</td>\n                                    <td\n                                      className=\"content-center\"\n                                      style={\n                                        isHighlight\n                                          ? { color: \"red\", fontWeight: \"bold\" }\n                                          : {}\n                                      }\n                                    >\n                                      {ehealthUtils.getNote(e.details[0])}\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              );\n                            }\n                            return (\n                              <tbody className=\"table-content\" key={i}>\n                                <tr>\n                                  <td className=\"service-content\">\n                                    {e.serviceName}\n                                  </td>\n                                  <td\n                                    className=\"content-center\"\n                                    style={\n                                      isHighlight\n                                        ? { color: \"red\", fontWeight: \"bold\" }\n                                        : {}\n                                    }\n                                  >\n                                    {ehealthUtils.getResult(e)}\n                                  </td>\n                                  <td className=\"content-center\">{range}</td>\n                                  <td className=\"content-center\">{e.unit}</td>\n                                  <td\n                                    className=\"content-center\"\n                                    style={\n                                      isHighlight\n                                        ? { color: \"red\", fontWeight: \"bold\" }\n                                        : {}\n                                    }\n                                  >\n                                    {ehealthUtils.getNote(e)}\n                                  </td>\n                                </tr>\n                              </tbody>\n                            );\n                          })\n                        : null}\n                    </table>\n                  )}\n                </div>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default TestResult;\n","import React, { useState } from \"react\";\n\n{\n  /** kết quả khám */\n}\nconst Result = (props) => {\n  console.log(\"props: \", props);\n  const [data, setData] = useState(props.item.checkUps || []);\n  const renderItem = (label, value, value2) => {\n    if (value || value2)\n      return (\n        <div>\n          <p className=\"txt-label\">{label}</p>\n          {value ? (\n            <span className=\"item-sick\">\n              <span className=\"dots\" />\n              <p className=\"txt-result-sick\">{value}</p>\n            </span>\n          ) : null}\n          {value2 ? (\n            <span className=\"item-sick\">\n              <span className=\"dots\" />\n              <p className=\"txt-result-sick\">{value2}</p>\n            </span>\n          ) : null}\n        </div>\n      );\n    return null;\n  };\n  return (\n    <div id=\"result\" className=\"content \">\n      <div className=\"container-result container-gender\">\n        <span className=\"container-gender-title\">\n          Bệnh viện Phổi Trung Ương\n        </span>\n        <ul className=\"list-result row\">\n          {data.map((e, i) => {\n            return (\n              <li key={i} className=\" col-lg-6\">\n                <div className=\"container-gender-item\">\n                  <span className=\"txt-title\">{e.serviceName}</span>\n                  <div className=\"container-gender-content\">\n                    {[\n                      renderItem(\"Chẩn đoán\", e.firstDiagnostic),\n                      renderItem(\n                        \"Chẩn đoán bệnh\",\n                        e.diseaseDiagnostic\n                        // e.diagnostic\n                      ),\n                      renderItem(\"Chẩn đoán khác\", e.otherDiseaseDiagnostic),\n                      renderItem(\"Thể bệnh\", e.diseaseType),\n                      renderItem(\n                        \"Lời dặn\",\n                        e.doctorAdvice\n                        //  e.doctorAdviceTxt\n                      ),\n                      renderItem(\"Ghi chú\", e.note),\n                    ].map((item, key) => (\n                      <div key={key}>{item}</div>\n                    ))}\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@components/Container\";\nimport images from \"@src/resources/images\";\nimport \"./styles.scss\";\nimport ListService from \"@src/components/ehealth/ListService\";\nimport AnatomicalResult from \"@src/components/ehealth/AnatomicalResult\";\nimport Drug from \"@src/components/ehealth/Drug\";\nimport ImageResult from \"@src/components/ehealth/ImageResult\";\nimport TestResult from \"@src/components/ehealth/TestResult\";\nimport Result from \"@src/components/ehealth/Result\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nconst DetailEhealth = (props) => {\n  const [data, setData] = useState([\n    {\n      name: \"Thông tin khám bệnh\",\n      id: \"#list-service\",\n      icon: images.ehealth.ic_service,\n    },\n    {\n      name: \"Kết quả khám\",\n      id: \"#result\",\n      icon: images.ehealth.ic_result,\n    },\n    {\n      name: \"Kết quả xét nghiệm\",\n      id: \"#test-result\",\n      icon: images.ehealth.ic_image_result,\n    },\n    {\n      name: \"Kết quả cận lâm sàng\",\n      id: \"#image-result\",\n      icon: images.ehealth.ic_diagnostic,\n    },\n    {\n      name: \"Kết quả giải phẫu\",\n      id: \"#anatomical-result\",\n      icon: images.ehealth.ic_anatomy,\n    },\n    {\n      name: \"Thuốc\",\n      id: \"#drug\",\n      icon: images.ehealth.ic_drug,\n    },\n  ]);\n  // const [detail, setDetail] = useState(props.location.state.detail.data)\n  const [item, setItem] = useState(props.location.state.item);\n\n  const tabSelected = (cityName) => (evt) => {\n    var i, x, tablinks;\n    x = document.getElementsByClassName(\"content\");\n    for (i = 0; i < x.length; i++) {\n      x[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tablink\");\n    for (i = 0; i < x.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" tab-select\", \"\");\n    }\n    document.getElementById(cityName).style.display = \"flex\";\n    evt.currentTarget.className += \" tab-select\";\n  };\n  useEffect(() => {\n    let el = document.getElementById(\"tabs-swipe-demo\");\n    // M.Tabs.init(el, { swipeable: true });\n    M.Tabs.init(el);\n  }, []);\n  const renderButton = () => {\n    return (\n      <ul id=\"tabs-swipe-demo\" className=\"tabs container-tab-ehealth \">\n        {data.map((e, i) => {\n          return (\n            <li class=\"tab\">\n              <a className=\"content-label\" href={e.id}>\n                <img className=\"icon\" src={e.icon} />\n                <span className=\"about\">{e.name}</span>\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n  let Birthday = new Date(item.birthday);\n  return (\n    <Container title=\"Y bạ điện tử\">\n      <div className=\"detail-ehealth\">\n        <div className=\"container-detail-ehealth\">\n          {renderButton()}\n          <div className=\"container-profile\">\n            <img src={images.ic_user} className=\"img-profile\" />\n            <div className=\"profile\">\n              <span className=\"patient-name\">\n                {item.patientName} ({Birthday.format(\"dd/MM/yyyy\")})\n              </span>{\" \"}\n              <br />\n              <span className=\"date-booking\">\n                Ngày khám: {new Date(item.createdAt).format(\"dd/MM/yyyy\")}\n              </span>\n            </div>\n          </div>\n          <div className=\"group-content-tab\">\n            <ListService item={item} />\n            <Result item={item} />\n            <TestResult item={item} />\n            <ImageResult item={item.diagnosticImages} />\n            <AnatomicalResult item={item} />\n            <Drug item={item} />\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default DetailEhealth;\n"],"sourceRoot":""}