apiVersion: apps/v1
kind: Deployment
metadata:
  name: kios
  namespace: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: reactjs
  template:
    metadata:
      labels:
        app: reactjs
    spec:
      containers:
      - image: mainamctk33/reactjs:1.0
        imagePullPolicy: Always
        name: kios
        ports:
        - containerPort: 80
          name: 80tcp32000
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: reactjs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: reactjs
        nfs:
          path: /mnt/NFS_Share/project-react-js-smart-kios/app
          server: 10.0.0.18
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-10-25T05:12:51Z"
    lastUpdateTime: "2022-10-25T05:12:51Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-10-25T05:12:46Z"
    lastUpdateTime: "2022-10-25T05:12:51Z"
    message: ReplicaSet "kios-77568959dd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
  
------------------------

apiVersion: v1
kind: Service
metadata:
  name: kios
  namespace: web
spec:
  selector:
    app: reactjs 
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 31110
